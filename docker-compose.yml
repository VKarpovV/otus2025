version: '3.8'

services:
  # NGINX Load Balancer (VM1)
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - apache1
      - apache2
    networks:
      - app_net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  # Apache Servers
  apache1:
    image: httpd:alpine
    hostname: apache1
    networks:
      - app_net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  apache2:
    image: httpd:alpine
    hostname: apache2
    networks:
      - app_net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  # MySQL Master (VM1)
  mysql_master:
    image: mysql:8.0
    container_name: mysql_master
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_REPLICATION_USER: repl_user
      MYSQL_REPLICATION_PASSWORD: replpass
    volumes:
      - ./mysql/master/my.cnf:/etc/mysql/my.cnf
      - ./mysql/master/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_master_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - db_net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  # MySQL Slave (VM2)
  mysql_slave:
    image: mysql:8.0
    container_name: mysql_slave
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_REPLICATION_USER: repl_user
      MYSQL_REPLICATION_PASSWORD: replpass
    volumes:
      - ./mysql/slave/my.cnf:/etc/mysql/my.cnf
      - mysql_slave_data:/var/lib/mysql
    depends_on:
      - mysql_master
    networks:
      - db_net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  # Monitoring (VM3)
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - monitoring_net

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring_net

  mysql_exporter:
    image: prom/mysqld-exporter
    environment:
      DATA_SOURCE_NAME: "root:rootpass@(mysql_master:3306)/"
    ports:
      - "9104:9104"
    depends_on:
      - mysql_master
    networks:
      - monitoring_net

  node-exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring_net
  # ELK Stack (VM3)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - monitoring_net

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    networks:
      - monitoring_net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - monitoring_net

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.0
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - elasticsearch
      - logstash
    networks:
      - monitoring_net

networks:
  app_net:
    driver: bridge
  db_net:
    driver: bridge
  monitoring_net:
    driver: bridge

volumes:
  mysql_master_data:
  mysql_slave_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:
