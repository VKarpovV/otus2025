version: '3.8'

services:
  # NGINX Load Balancer (VM1)
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - apache1
      - apache2
    networks:
      - app_net

  # Apache Servers
  apache1:
    image: httpd:alpine
    hostname: apache1
    networks:
      - app_net

  apache2:
    image: httpd:alpine
    hostname: apache2
    networks:
      - app_net

  # MySQL Master (VM1)
  mysql_master:
    image: mysql:8.0
    container_name: mysql_master
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_REPLICATION_USER: repl_user
      MYSQL_REPLICATION_PASSWORD: replpass
    volumes:
      - ./mysql/master/my.cnf:/etc/mysql/my.cnf
      - ./mysql/master/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - db_net

  # MySQL Slave (VM2)
  mysql_slave:
    image: mysql:8.0
    container_name: mysql_slave
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_REPLICATION_USER: repl_user
      MYSQL_REPLICATION_PASSWORD: replpass
    volumes:
      - ./mysql/slave/my.cnf:/etc/mysql/my.cnf
    depends_on:
      - mysql_master
    networks:
      - db_net

  # Monitoring (VM3)
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

networks:
  app_net:
    driver: bridge
  db_net:
    driver: bridge
  mysql_master_data:
  mysql_slave_data:
  elk_data:
